{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\src\\\\views\\\\cameraFaceDetect.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Webcam from 'react-webcam';\nimport { loadModels, getFullFaceDescription, createMatcher } from '../api/face';\nimport DrawBox from '../components/drawBox';\nimport { JSON_PROFILE } from '../common/profile';\nvar WIDTH = 420;\nvar HEIGHT = 420;\nvar inputSize = 160;\n\nvar CameraFaceDetect =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CameraFaceDetect, _Component);\n\n  function CameraFaceDetect(props) {\n    var _this;\n\n    _classCallCheck(this, CameraFaceDetect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CameraFaceDetect).call(this, props));\n\n    _this.setInputDevice = function () {\n      navigator.mediaDevices.enumerateDevices().then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(devices) {\n          var inputDevice;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return devices.filter(function (device) {\n                    return device.kind === 'videoinput';\n                  });\n\n                case 2:\n                  inputDevice = _context.sent;\n\n                  if (!(inputDevice.length < 2)) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _context.next = 6;\n                  return _this.setState({\n                    facingMode: 'user'\n                  });\n\n                case 6:\n                  _context.next = 10;\n                  break;\n\n                case 8:\n                  _context.next = 10;\n                  return _this.setState({\n                    facingMode: {\n                      exact: 'environment'\n                    }\n                  });\n\n                case 10:\n                  _this.startCapture();\n\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    };\n\n    _this.matcher =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var faceMatcher;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return createMatcher(JSON_PROFILE);\n\n            case 2:\n              faceMatcher = _context2.sent;\n\n              _this.setState({\n                faceMatcher: faceMatcher\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    _this.startCapture = function () {\n      _this.interval = setInterval(function () {\n        _this.capture();\n      }, 1500);\n    };\n\n    _this.capture =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!_this.webcam.current) {\n                _context3.next = 3;\n                break;\n              }\n\n              _context3.next = 3;\n              return getFullFaceDescription(_this.webcam.current.getScreenshot(), inputSize).then(function (fullDesc) {\n                return _this.setState({\n                  fullDesc: fullDesc\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n    _this.webcam = React.createRef();\n    _this.state = {\n      fullDesc: null,\n      faceMatcher: null,\n      facingMode: null\n    };\n    return _this;\n  }\n\n  _createClass(CameraFaceDetect, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      loadModels();\n      this.setInputDevice();\n      this.matcher();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          fullDesc = _this$state.fullDesc,\n          faceMatcher = _this$state.faceMatcher,\n          facingMode = _this$state.facingMode;\n      var videoConstraints = null;\n      var camera = '';\n\n      if (!!facingMode) {\n        videoConstraints = {\n          width: WIDTH,\n          height: HEIGHT,\n          facingMode: facingMode\n        };\n\n        if (facingMode === 'user') {\n          camera = 'Front';\n        } else {\n          camera = 'Back';\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"Camera\",\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Camera: \", camera), React.createElement(\"div\", {\n        style: {\n          width: WIDTH,\n          height: HEIGHT\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'relative',\n          width: WIDTH\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, !!videoConstraints ? React.createElement(\"div\", {\n        style: {\n          position: 'absolute'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Webcam, {\n        playsInline: true,\n        audio: true,\n        width: WIDTH,\n        height: HEIGHT,\n        screenshotFormat: \"image/jpeg\",\n        videoConstraints: videoConstraints,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })) : null, !!fullDesc ? React.createElement(DrawBox, {\n        fullDesc: fullDesc,\n        faceMatcher: faceMatcher,\n        imageWidth: WIDTH,\n        boxColor: 'blue',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }) : null)));\n    }\n  }]);\n\n  return CameraFaceDetect;\n}(Component);\n\nexport default withRouter(CameraFaceDetect);","map":{"version":3,"sources":["D:\\testAI\\bnk48-face-recognition-master\\src\\views\\cameraFaceDetect.js"],"names":["React","Component","withRouter","Webcam","loadModels","getFullFaceDescription","createMatcher","DrawBox","JSON_PROFILE","WIDTH","HEIGHT","inputSize","CameraFaceDetect","props","setInputDevice","navigator","mediaDevices","enumerateDevices","then","devices","filter","device","kind","inputDevice","length","setState","facingMode","exact","startCapture","matcher","faceMatcher","interval","setInterval","capture","webcam","current","getScreenshot","fullDesc","createRef","state","clearInterval","videoConstraints","camera","width","height","display","flexDirection","alignItems","position"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Webcam from 'react-webcam';\nimport { loadModels, getFullFaceDescription, createMatcher } from '../api/face';\nimport DrawBox from '../components/drawBox';\nimport { JSON_PROFILE } from '../common/profile';\n\nconst WIDTH = 420;\nconst HEIGHT = 420;\nconst inputSize = 160;\n\nclass CameraFaceDetect extends Component {\n  constructor(props) {\n    super(props);\n    this.webcam = React.createRef();\n    this.state = {\n      fullDesc: null,\n      faceMatcher: null,\n      facingMode: null\n    };\n  }\n\n  componentWillMount() {\n    loadModels();\n    this.setInputDevice();\n    this.matcher();\n  }\n\n  setInputDevice = () => {\n    navigator.mediaDevices.enumerateDevices().then(async devices => {\n      let inputDevice = await devices.filter(\n        device => device.kind === 'videoinput'\n      );\n      if (inputDevice.length < 2) {\n        await this.setState({\n          facingMode: 'user'\n        });\n      } else {\n        await this.setState({\n          facingMode: { exact: 'environment' }\n        });\n      }\n      this.startCapture();\n    });\n  };\n\n  matcher = async () => {\n    const faceMatcher = await createMatcher(JSON_PROFILE);\n    this.setState({ faceMatcher });\n  };\n\n  startCapture = () => {\n    this.interval = setInterval(() => {\n      this.capture();\n    }, 1500);\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  capture = async () => {\n    if (!!this.webcam.current) {\n      await getFullFaceDescription(\n        this.webcam.current.getScreenshot(),\n        inputSize\n      ).then(fullDesc => this.setState({ fullDesc }));\n    }\n  };\n\n  render() {\n    const { fullDesc, faceMatcher, facingMode } = this.state;\n    let videoConstraints = null;\n    let camera = '';\n    if (!!facingMode) {\n      videoConstraints = {\n        width: WIDTH,\n        height: HEIGHT,\n        facingMode: facingMode\n      };\n      if (facingMode === 'user') {\n        camera = 'Front';\n      } else {\n        camera = 'Back';\n      }\n    }\n\n    return (\n      <div\n        className=\"Camera\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}\n      >\n        <p>Camera: {camera}</p>\n        <div\n          style={{\n            width: WIDTH,\n            height: HEIGHT\n          }}\n        >\n          <div style={{ position: 'relative', width: WIDTH }}>\n            {!!videoConstraints ? (\n              <div style={{ position: 'absolute' }}>\n                <Webcam\n                playsInline\n                  audio={true}\n                  width={WIDTH}\n                  height={HEIGHT}\n                  screenshotFormat=\"image/jpeg\"\n                  videoConstraints={videoConstraints}\n                />\n              </div>\n            ) : null}\n            {!!fullDesc ? (\n              <DrawBox\n                fullDesc={fullDesc}\n                faceMatcher={faceMatcher}\n                imageWidth={WIDTH}\n                boxColor={'blue'}\n              />\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CameraFaceDetect);\n"]},"metadata":{},"sourceType":"module"}