{"ast":null,"code":"import _objectSpread from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\src\\\\views\\\\faceRecognition.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { loadModels, getFullFaceDescription, createMatcher, isFaceDetectionModelLoaded } from '../api/face';\nimport DrawBox from '../components/drawBox';\nimport ShowDescriptors from '../components/showDescriptors';\nimport { JSON_PROFILE } from '../common/profile';\nvar MaxWidth = 600;\nvar boxColor = '#BE80B5'; // const testImg = require('../img/test.jpg');\n\nvar INIT_STATE = {\n  url: null,\n  imageURL: null,\n  fullDesc: null,\n  imageDimension: null,\n  error: null,\n  loading: false\n};\n\nvar FaceRecognition =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FaceRecognition, _Component);\n\n  function FaceRecognition(props) {\n    var _this;\n\n    _classCallCheck(this, FaceRecognition);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FaceRecognition).call(this, props));\n    _this.mounting =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return loadModels();\n\n            case 2:\n              _context.next = 4;\n              return _this.matcher();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.matcher =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var faceMatcher;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return createMatcher(JSON_PROFILE);\n\n            case 2:\n              faceMatcher = _context2.sent;\n\n              _this.setState({\n                faceMatcher: faceMatcher\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    _this.handleFileChange =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(event) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this.resetState();\n\n                _context3.next = 3;\n                return _this.setState({\n                  imageURL: URL.createObjectURL(event.target.files[0]),\n                  loading: true\n                });\n\n              case 3:\n                _this.handleImageChange();\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleURLChange = function (event) {\n      _this.setState({\n        url: event.target.value\n      });\n    };\n\n    _this.handleButtonClick =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var blob;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this.resetState();\n\n              _context4.next = 3;\n              return fetch(_this.state.url).then(function (r) {\n                return r.blob();\n              }).catch(function (error) {\n                return _this.setState({\n                  error: error\n                });\n              });\n\n            case 3:\n              blob = _context4.sent;\n\n              if (!!blob && blob.type.includes('image')) {\n                _this.setState({\n                  imageURL: URL.createObjectURL(blob),\n                  loading: true\n                });\n\n                _this.handleImageChange();\n              }\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n    _this.handleImageChange =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var image,\n          _args5 = arguments;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              image = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : _this.state.imageURL;\n              _context5.next = 3;\n              return _this.getImageDimension(image);\n\n            case 3:\n              _context5.next = 5;\n              return getFullFaceDescription(image).then(function (fullDesc) {\n                _this.setState({\n                  fullDesc: fullDesc,\n                  loading: false\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    _this.getImageDimension = function (imageURL) {\n      var img = new Image();\n\n      img.onload = function () {\n        var HEIGHT = _this.state.WIDTH * img.height / img.width;\n\n        _this.setState({\n          HEIGHT: HEIGHT,\n          imageDimension: {\n            width: img.width,\n            height: img.height\n          }\n        });\n      };\n\n      img.src = imageURL;\n    };\n\n    _this.handleDescriptorsCheck = function (event) {\n      _this.setState({\n        showDescriptors: event.target.checked\n      });\n    };\n\n    _this.resetState = function () {\n      _this.setState(_objectSpread({}, INIT_STATE));\n    };\n\n    _this.state = _objectSpread({}, INIT_STATE, {\n      faceMatcher: null,\n      showDescriptors: false,\n      WIDTH: null,\n      HEIGHT: 0,\n      isModelLoaded: !!isFaceDetectionModelLoaded()\n    });\n    return _this;\n  }\n\n  _createClass(FaceRecognition, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.resetState();\n      var _W = document.documentElement.clientWidth;\n      if (_W > MaxWidth) _W = MaxWidth;\n      this.setState({\n        WIDTH: _W\n      });\n      this.mounting();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          WIDTH = _this$state.WIDTH,\n          HEIGHT = _this$state.HEIGHT,\n          imageURL = _this$state.imageURL,\n          fullDesc = _this$state.fullDesc,\n          faceMatcher = _this$state.faceMatcher,\n          showDescriptors = _this$state.showDescriptors,\n          isModelLoaded = _this$state.isModelLoaded,\n          error = _this$state.error,\n          loading = _this$state.loading; // Display working status\n      // let status = <p>Status: Model Loaded = {isModelLoaded.toString()}</p>;\n      // if (!!error && error.toString() === 'TypeError: Failed to fetch') {\n      //   status = (\n      //     <p style={{ color: 'red' }}>Status: Error Failed to fetch Image URL</p>\n      //   );\n      // } else if (loading) {\n      //   status = <p style={{ color: 'blue' }}>Status: LOADING...</p>;\n      // } else if (!!fullDesc && !!imageURL && !loading) {\n      //   if (fullDesc.length < 2)\n      //     status = <p>Status: {fullDesc.length} Face Detect</p>;\n      //   if (fullDesc.length > 1)\n      //     status = <p>Status: {fullDesc.length} Faces Detect</p>;\n      // }\n      // Loading Spinner\n\n      var spinner = React.createElement(\"div\", {\n        style: {\n          margin: 0,\n          color: '#BE80B5',\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%,-50%)',\n          textShadow: '2px 2px 3px #fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Processing...\"));\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'relative',\n          width: WIDTH,\n          height: HEIGHT\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, !!imageURL ? React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'absolute'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          width: WIDTH\n        },\n        src: imageURL,\n        alt: \"imageURL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })), !!fullDesc ? React.createElement(DrawBox, {\n        fullDesc: fullDesc,\n        faceMatcher: faceMatcher,\n        imageWidth: WIDTH,\n        boxColor: boxColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }) : null) : null, loading ? spinner : null), React.createElement(\"div\", {\n        style: {\n          width: WIDTH,\n          padding: 10,\n          border: 'solid',\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Input Image file or URL\"), React.createElement(\"input\", {\n        id: \"myFileUpload\",\n        type: \"file\",\n        onChange: this.handleFileChange,\n        accept: \".jpg, .jpeg, .png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"URLInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"url\",\n        name: \"url\",\n        id: \"url\",\n        placeholder: \"Place your photo URL here (only .jpg, .jpeg, .png)\",\n        pattern: \"https://.*\",\n        size: \"30\",\n        onChange: this.handleURLChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Upload\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"descriptors\",\n        type: \"checkbox\",\n        checked: this.state.showDescriptors,\n        onChange: this.handleDescriptorsCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Show Descriptors\")), !!showDescriptors ? React.createElement(ShowDescriptors, {\n        fullDesc: fullDesc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }) : null));\n    }\n  }]);\n\n  return FaceRecognition;\n}(Component);\n\nexport default withRouter(FaceRecognition);","map":{"version":3,"sources":["D:\\testAI\\bnk48-face-recognition-master\\src\\views\\faceRecognition.js"],"names":["React","Component","withRouter","loadModels","getFullFaceDescription","createMatcher","isFaceDetectionModelLoaded","DrawBox","ShowDescriptors","JSON_PROFILE","MaxWidth","boxColor","INIT_STATE","url","imageURL","fullDesc","imageDimension","error","loading","FaceRecognition","props","mounting","matcher","faceMatcher","setState","handleFileChange","event","resetState","URL","createObjectURL","target","files","handleImageChange","handleURLChange","value","handleButtonClick","fetch","state","then","r","blob","catch","type","includes","image","getImageDimension","img","Image","onload","HEIGHT","WIDTH","height","width","src","handleDescriptorsCheck","showDescriptors","checked","isModelLoaded","_W","document","documentElement","clientWidth","spinner","margin","color","position","top","left","transform","textShadow","display","flexDirection","alignItems","padding","border","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n  loadModels,\n  getFullFaceDescription,\n  createMatcher,\n  isFaceDetectionModelLoaded\n} from '../api/face';\nimport DrawBox from '../components/drawBox';\nimport ShowDescriptors from '../components/showDescriptors';\nimport { JSON_PROFILE } from '../common/profile';\n\nconst MaxWidth = 600;\nconst boxColor = '#BE80B5';\n// const testImg = require('../img/test.jpg');\n\nconst INIT_STATE = {\n  url: null,\n  imageURL: null,\n  fullDesc: null,\n  imageDimension: null,\n  error: null,\n  loading: false\n};\n\nclass FaceRecognition extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...INIT_STATE,\n      faceMatcher: null,\n      showDescriptors: false,\n      WIDTH: null,\n      HEIGHT: 0,\n      isModelLoaded: !!isFaceDetectionModelLoaded()\n    };\n  }\n\n  componentWillMount() {\n    this.resetState();\n    let _W = document.documentElement.clientWidth;\n    if (_W > MaxWidth) _W = MaxWidth;\n    this.setState({ WIDTH: _W });\n    this.mounting();\n  }\n\n  mounting = async () => {\n    await loadModels();\n    await this.matcher();\n    // await this.getImageDimension(testImg);\n    // await this.setState({ imageURL: testImg, loading: true });\n    // await this.handleImageChange(testImg);\n  };\n\n  matcher = async () => {\n    const faceMatcher = await createMatcher(JSON_PROFILE);\n    this.setState({ faceMatcher });\n  };\n\n  handleFileChange = async event => {\n    this.resetState();\n    await this.setState({\n      imageURL: URL.createObjectURL(event.target.files[0]),\n      loading: true\n    });\n    this.handleImageChange();\n  };\n\n  handleURLChange = event => {\n    this.setState({ url: event.target.value });\n  };\n\n  handleButtonClick = async () => {\n    this.resetState();\n    let blob = await fetch(this.state.url)\n      .then(r => r.blob())\n      .catch(error => this.setState({ error }));\n    if (!!blob && blob.type.includes('image')) {\n      this.setState({\n        imageURL: URL.createObjectURL(blob),\n        loading: true\n      });\n      this.handleImageChange();\n    }\n  };\n\n  handleImageChange = async (image = this.state.imageURL) => {\n    await this.getImageDimension(image);\n    await getFullFaceDescription(image).then(fullDesc => {\n      this.setState({ fullDesc, loading: false });\n    });\n  };\n\n  getImageDimension = imageURL => {\n    let img = new Image();\n    img.onload = () => {\n      let HEIGHT = (this.state.WIDTH * img.height) / img.width;\n      this.setState({\n        HEIGHT,\n        imageDimension: {\n          width: img.width,\n          height: img.height\n        }\n      });\n    };\n    img.src = imageURL;\n  };\n\n  handleDescriptorsCheck = event => {\n    this.setState({ showDescriptors: event.target.checked });\n  };\n\n  resetState = () => {\n    this.setState({ ...INIT_STATE });\n  };\n  render() {\n    const {\n      WIDTH,\n      HEIGHT,\n      imageURL,\n      fullDesc,\n      faceMatcher,\n      showDescriptors,\n      isModelLoaded,\n      error,\n      loading\n    } = this.state;\n\n    // Display working status\n    // let status = <p>Status: Model Loaded = {isModelLoaded.toString()}</p>;\n    // if (!!error && error.toString() === 'TypeError: Failed to fetch') {\n    //   status = (\n    //     <p style={{ color: 'red' }}>Status: Error Failed to fetch Image URL</p>\n    //   );\n    // } else if (loading) {\n    //   status = <p style={{ color: 'blue' }}>Status: LOADING...</p>;\n    // } else if (!!fullDesc && !!imageURL && !loading) {\n    //   if (fullDesc.length < 2)\n    //     status = <p>Status: {fullDesc.length} Face Detect</p>;\n    //   if (fullDesc.length > 1)\n    //     status = <p>Status: {fullDesc.length} Faces Detect</p>;\n    // }\n\n    // Loading Spinner\n    let spinner = (\n      <div\n        style={{\n          margin: 0,\n          color: '#BE80B5',\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%,-50%)',\n          textShadow: '2px 2px 3px #fff'\n        }}\n      >\n        <div className=\"loading\" />\n        <h3>Processing...</h3>\n      </div>\n    );\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}\n      >\n        {/* {status} */}\n        <div\n          style={{\n            position: 'relative',\n            width: WIDTH,\n            height: HEIGHT\n          }}\n        >\n          {!!imageURL ? (\n            <div\n              style={{\n                position: 'relative'\n              }}\n            >\n              <div style={{ position: 'absolute' }}>\n                <img style={{ width: WIDTH }} src={imageURL} alt=\"imageURL\" />\n              </div>\n              {!!fullDesc ? (\n                <DrawBox\n                  fullDesc={fullDesc}\n                  faceMatcher={faceMatcher}\n                  imageWidth={WIDTH}\n                  boxColor={boxColor}\n                />\n              ) : null}\n            </div>\n          ) : null}\n          {loading ? spinner : null}\n        </div>\n        <div\n          style={{\n            width: WIDTH,\n            padding: 10,\n            border: 'solid',\n            marginTop: 10\n          }}\n        >\n          <p>Input Image file or URL</p>\n          <input\n            id=\"myFileUpload\"\n            type=\"file\"\n            onChange={this.handleFileChange}\n            accept=\".jpg, .jpeg, .png\"\n          />\n          <br />\n          <div className=\"URLInput\">\n            <input\n              type=\"url\"\n              name=\"url\"\n              id=\"url\"\n              placeholder=\"Place your photo URL here (only .jpg, .jpeg, .png)\"\n              pattern=\"https://.*\"\n              size=\"30\"\n              onChange={this.handleURLChange}\n            />\n            <button onClick={this.handleButtonClick}>Upload</button>\n          </div>\n          <div>\n            <input\n              name=\"descriptors\"\n              type=\"checkbox\"\n              checked={this.state.showDescriptors}\n              onChange={this.handleDescriptorsCheck}\n            />\n            <label>Show Descriptors</label>\n          </div>\n          {!!showDescriptors ? <ShowDescriptors fullDesc={fullDesc} /> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(FaceRecognition);\n"]},"metadata":{},"sourceType":"module"}