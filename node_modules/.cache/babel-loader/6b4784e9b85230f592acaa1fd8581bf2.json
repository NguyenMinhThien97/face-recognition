{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\src\\\\views\\\\cameraFaceDetect.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'; // import player from 'react-player';\n\nimport { Player } from 'video-react';\nimport { loadModels, getFullFaceDescription, createMatcher } from '../api/face';\nimport DrawBox from '../components/drawBox';\nimport { JSON_PROFILE } from '../common/profile';\nvar WIDTH = 420;\nvar HEIGHT = 420;\nvar inputSize = 160;\n\nvar CameraFaceDetect =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CameraFaceDetect, _Component);\n\n  function CameraFaceDetect(props) {\n    var _this;\n\n    _classCallCheck(this, CameraFaceDetect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CameraFaceDetect).call(this, props));\n    _this.matcher =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var faceMatcher;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return createMatcher(JSON_PROFILE);\n\n            case 2:\n              faceMatcher = _context.sent;\n\n              _this.setState({\n                faceMatcher: faceMatcher\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.capture =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!_this.player.readyState) {\n                _context2.next = 3;\n                break;\n              }\n\n              _context2.next = 3;\n              return getFullFaceDescription(_this.player.current.getScreenshot(), inputSize).then(function (fullDesc) {\n                return _this.setState({\n                  fullDesc: fullDesc\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.player = React.createRef();\n    _this.state = {\n      fullDesc: null,\n      faceMatcher: null,\n      facingMode: null\n    };\n    return _this;\n  }\n\n  _createClass(CameraFaceDetect, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      loadModels(); // this.setInputDevice();\n\n      this.matcher();\n    } // setInputDevice = () => {\n    //   navigator.mediaDevices.enumerateDevices().then(async devices => {\n    //     let inputDevice = await devices.filter(\n    //       device => device.kind === 'videoinput'\n    //     );\n    //     if (inputDevice.length < 2) {\n    //       await this.setState({\n    //         facingMode: 'user'\n    //       });\n    //     } else {\n    //       await this.setState({\n    //         facingMode: { exact: 'environment' }\n    //       });\n    //     }\n    //     this.startCapture();\n    //   });\n    // };\n\n  }, {\n    key: \"componentWillUnmount\",\n    // startCapture = () => {\n    //   this.interval = setInterval(() => {\n    //     this.capture();\n    //   }, 1500);\n    // };\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          fullDesc = _this$state.fullDesc,\n          faceMatcher = _this$state.faceMatcher,\n          facingMode = _this$state.facingMode;\n      var videoConstraints = null;\n      var camera = ''; // if (!!facingMode) {\n      //   videoConstraints = {\n      //     width: WIDTH,\n      //     height: HEIGHT,\n      //     facingMode: facingMode\n      //   };\n      //   if (facingMode === 'user') {\n      //     camera = 'Front';\n      //   } else {\n      //     camera = 'Back';\n      //   }\n      // }\n\n      return React.createElement(\"div\", {\n        className: \"Camera\",\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \" Camera: \", camera, \" \"), \" \", React.createElement(\"div\", {\n        style: {\n          width: WIDTH,\n          height: HEIGHT\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'relative',\n          width: WIDTH\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \" \", !!videoConstraints ? React.createElement(\"div\", {\n        style: {\n          position: 'absolute'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Player, {\n        autoPlay: true,\n        width: WIDTH,\n        height: HEIGHT,\n        src: \"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\",\n        screenshotFormat: \"image/jpeg\",\n        videoConstraints: videoConstraints,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), \" \") : null, \" \", !!fullDesc ? React.createElement(DrawBox, {\n        fullDesc: fullDesc,\n        faceMatcher: faceMatcher,\n        imageWidth: WIDTH,\n        boxColor: 'blue',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }) : null, \" \"), \" \"), \" \");\n    }\n  }]);\n\n  return CameraFaceDetect;\n}(Component);\n\nexport default withRouter(CameraFaceDetect);","map":{"version":3,"sources":["D:\\testAI\\bnk48-face-recognition-master\\src\\views\\cameraFaceDetect.js"],"names":["React","Component","withRouter","Player","loadModels","getFullFaceDescription","createMatcher","DrawBox","JSON_PROFILE","WIDTH","HEIGHT","inputSize","CameraFaceDetect","props","matcher","faceMatcher","setState","capture","player","readyState","current","getScreenshot","then","fullDesc","createRef","state","facingMode","clearInterval","interval","videoConstraints","camera","display","flexDirection","alignItems","width","height","position"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n// import player from 'react-player';\nimport { Player } from 'video-react';\nimport { loadModels, getFullFaceDescription, createMatcher } from '../api/face';\nimport DrawBox from '../components/drawBox';\nimport { JSON_PROFILE } from '../common/profile';\n\nconst WIDTH = 420;\nconst HEIGHT = 420;\nconst inputSize = 160;\n\nclass CameraFaceDetect extends Component {\n    constructor(props) {\n        super(props);\n        this.player = React.createRef();\n        this.state = {\n            fullDesc: null,\n            faceMatcher: null,\n            facingMode: null\n        };\n    }\n\n    componentWillMount() {\n        loadModels();\n        // this.setInputDevice();\n        this.matcher();\n    }\n\n    // setInputDevice = () => {\n    //   navigator.mediaDevices.enumerateDevices().then(async devices => {\n    //     let inputDevice = await devices.filter(\n    //       device => device.kind === 'videoinput'\n    //     );\n    //     if (inputDevice.length < 2) {\n    //       await this.setState({\n    //         facingMode: 'user'\n    //       });\n    //     } else {\n    //       await this.setState({\n    //         facingMode: { exact: 'environment' }\n    //       });\n    //     }\n    //     this.startCapture();\n    //   });\n    // };\n\n    matcher = async() => {\n        const faceMatcher = await createMatcher(JSON_PROFILE);\n        this.setState({ faceMatcher });\n    };\n\n    // startCapture = () => {\n    //   this.interval = setInterval(() => {\n    //     this.capture();\n    //   }, 1500);\n    // };\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    capture = async() => {\n        if (!!this.player.readyState) {\n            await getFullFaceDescription(\n                this.player.current.getScreenshot(),\n                inputSize\n            ).then(fullDesc => this.setState({ fullDesc }));\n        }\n    };\n\n    render() {\n        const { fullDesc, faceMatcher, facingMode } = this.state;\n        let videoConstraints = null;\n        let camera = '';\n        // if (!!facingMode) {\n        //   videoConstraints = {\n        //     width: WIDTH,\n        //     height: HEIGHT,\n        //     facingMode: facingMode\n        //   };\n        //   if (facingMode === 'user') {\n        //     camera = 'Front';\n        //   } else {\n        //     camera = 'Back';\n        //   }\n        // }\n\n        return ( <\n            div className = \"Camera\"\n            style = {\n                {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center'\n                }\n            } >\n            <\n            p > Camera: { camera } < /p> <\n            div style = {\n                {\n                    width: WIDTH,\n                    height: HEIGHT\n                }\n            } >\n            <\n            div style = {\n                { position: 'relative', width: WIDTH } } > {!!videoConstraints ? ( <\n                    div style = {\n                        { position: 'absolute' } } >\n                    <\n                    Player autoPlay width = { WIDTH }\n                    height = { HEIGHT }\n                    src = \"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\n                    screenshotFormat = \"image/jpeg\"\n                    videoConstraints = { videoConstraints }\n                    /> <\n                    /div>\n                ) : null\n            } {\n                !!fullDesc ? ( <\n                    DrawBox fullDesc = { fullDesc }\n                    faceMatcher = { faceMatcher }\n                    imageWidth = { WIDTH }\n                    boxColor = { 'blue' }\n                    />\n                ) : null\n            } <\n            /div> <\n            /div> <\n            /div>\n        );\n    }\n}\n\nexport default withRouter(CameraFaceDetect);"]},"metadata":{},"sourceType":"module"}