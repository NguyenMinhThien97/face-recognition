{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\testAI\\\\bnk48-face-recognition-master\\\\src\\\\components\\\\drawBox.js\";\nimport React, { Component } from 'react';\n\nvar DrawBox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DrawBox, _Component);\n\n  function DrawBox(_props) {\n    var _this;\n\n    _classCallCheck(this, DrawBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DrawBox).call(this, _props));\n    _this.getDescription =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var props,\n          fullDesc,\n          faceMatcher,\n          match,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              props = _args.length > 0 && _args[0] !== undefined ? _args[0] : _this.props;\n              fullDesc = props.fullDesc, faceMatcher = props.faceMatcher;\n\n              if (!fullDesc) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 5;\n              return _this.setState({\n                descriptors: fullDesc.map(function (fd) {\n                  return fd.descriptor;\n                }),\n                detections: fullDesc.map(function (fd) {\n                  return fd.detection;\n                })\n              });\n\n            case 5:\n              if (!(!!_this.state.descriptors && !!faceMatcher)) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 8;\n              return _this.state.descriptors.map(function (descriptor) {\n                return faceMatcher.findBestMatch(descriptor);\n              });\n\n            case 8:\n              match = _context.sent;\n\n              _this.setState({\n                match: match\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.state = {\n      descriptors: null,\n      detections: null,\n      match: null\n    };\n    return _this;\n  }\n\n  _createClass(DrawBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getDescription();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      this.getDescription(newProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          imageWidth = _this$props.imageWidth,\n          boxColor = _this$props.boxColor;\n      var _this$state = this.state,\n          detections = _this$state.detections,\n          match = _this$state.match;\n      var box = null;\n\n      if (!!detections) {\n        box = detections.map(function (detection, i) {\n          var relativeBox = detection.relativeBox;\n          var dimension = detection._imageDims;\n\n          var _X = imageWidth * relativeBox._x;\n\n          var _Y = relativeBox._y * imageWidth * dimension._height / dimension._width;\n\n          var _W = imageWidth * relativeBox.width;\n\n          var _H = relativeBox.height * imageWidth * dimension._height / dimension._width;\n\n          return React.createElement(\"div\", {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            style: {\n              position: 'absolute',\n              border: 'solid',\n              borderColor: boxColor,\n              height: _H,\n              width: _W,\n              transform: \"translate(\".concat(_X, \"px,\").concat(_Y, \"px)\")\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, !!match && match[i] && match[i]._label !== 'unknown' ? React.createElement(\"p\", {\n            style: {\n              backgroundColor: boxColor,\n              border: 'solid',\n              borderColor: boxColor,\n              width: _W,\n              marginTop: 0,\n              color: '#fff',\n              transform: \"translate(-3px,\".concat(_H, \"px)\")\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, match[i]._label) : null));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, box);\n    }\n  }]);\n\n  return DrawBox;\n}(Component);\n\nexport default DrawBox;","map":{"version":3,"sources":["D:\\testAI\\bnk48-face-recognition-master\\src\\components\\drawBox.js"],"names":["React","Component","DrawBox","props","getDescription","fullDesc","faceMatcher","setState","descriptors","map","fd","descriptor","detections","detection","state","findBestMatch","match","newProps","imageWidth","boxColor","box","i","relativeBox","dimension","_imageDims","_X","_x","_Y","_y","_height","_width","_W","width","_H","height","position","border","borderColor","transform","_label","backgroundColor","marginTop","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass DrawBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      descriptors: null,\n      detections: null,\n      match: null\n    };\n  }\n\n  componentDidMount() {\n    this.getDescription();\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.getDescription(newProps);\n  }\n\n  getDescription = async (props = this.props) => {\n    const { fullDesc, faceMatcher } = props;\n    if (!!fullDesc) {\n      await this.setState({\n        descriptors: fullDesc.map(fd => fd.descriptor),\n        detections: fullDesc.map(fd => fd.detection)\n      });\n      if (!!this.state.descriptors && !!faceMatcher) {\n        let match = await this.state.descriptors.map(descriptor =>\n          faceMatcher.findBestMatch(descriptor)\n        );\n        this.setState({ match });\n      }\n    }\n  };\n\n  render() {\n    const { imageWidth, boxColor } = this.props;\n    const { detections, match } = this.state;\n    let box = null;\n\n    if (!!detections) {\n      box = detections.map((detection, i) => {\n        const relativeBox = detection.relativeBox;\n        const dimension = detection._imageDims;\n        let _X = imageWidth * relativeBox._x;\n        let _Y =\n          (relativeBox._y * imageWidth * dimension._height) / dimension._width;\n        let _W = imageWidth * relativeBox.width;\n        let _H =\n          (relativeBox.height * imageWidth * dimension._height) /\n          dimension._width;\n        return (\n          <div key={i}>\n            <div\n              style={{\n                position: 'absolute',\n                border: 'solid',\n                borderColor: boxColor,\n                height: _H,\n                width: _W,\n                transform: `translate(${_X}px,${_Y}px)`\n              }}\n            >\n              {!!match && match[i] && match[i]._label !== 'unknown' ? (\n                <p\n                  style={{\n                    backgroundColor: boxColor,\n                    border: 'solid',\n                    borderColor: boxColor,\n                    width: _W,\n                    marginTop: 0,\n                    color: '#fff',\n                    transform: `translate(-3px,${_H}px)`\n                  }}\n                >\n                  {match[i]._label}\n                </p>\n              ) : null}\n            </div>\n          </div>\n        );\n      });\n    }\n\n    return <div>{box}</div>;\n  }\n}\n\nexport default DrawBox;\n"]},"metadata":{},"sourceType":"module"}